@model MVCLogin.ViewModels.InfoVM

<form name="infoForm">
    @Html.AntiForgeryToken()
    <div class="modal-header" style="display:block;">
        <h4 class="modal-title">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <span>Edit Personal Information</span>
        </h4>
    </div>
    <div class="modal-body">
        @Html.HiddenFor(c => c.PersonId)
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(x => x.PersonId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.PersonId, new { @class = "form-control", required = true, @readonly = "readonly", disabled = "disabled" })
                        @Html.ValidationMessageFor(x => x.PersonId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Name, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.Name, new { @class = "form-control", required = true, @readonly = "readonly", disabled = "disabled" })
                        @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Surname, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.Surname, new { @class = "form-control", required = true, @readonly = "readonly", disabled = "disabled" })
                        @Html.ValidationMessageFor(x => x.Surname, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Password, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.PasswordFor(x => x.Password, new { @class = "form-control", required = true, placeholder = "Password" })
                        @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.TelNo, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.TelNo, new { @class = "form-control", required = true })
                        @Html.ValidationMessageFor(x => x.TelNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.CellNo, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.CellNo, new { @class = "form-control", required = true })
                        @Html.ValidationMessageFor(x => x.CellNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.AddressLine1, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.AddressLine1, new { @class = "form-control", required = true })
                        @Html.ValidationMessageFor(x => x.AddressLine1, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.AddressLine2, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.AddressLine2, new { @class = "form-control", required = true })
                        @Html.ValidationMessageFor(x => x.AddressLine2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.AddressLine3, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.AddressLine3, new { @class = "form-control", required = true })
                        @Html.ValidationMessageFor(x => x.AddressLine3, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.AddressCode, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.AddressCode, new { @class = "form-control", required = true })
                        @Html.ValidationMessageFor(x => x.AddressCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.PostalAddress1, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.PostalAddress1, new { @class = "form-control", required = true })
                        @Html.ValidationMessageFor(x => x.PostalAddress1, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.PostalAddress2, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.PostalAddress2, new { @class = "form-control", required = true })
                        @Html.ValidationMessageFor(x => x.PostalAddress2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.PostalCode, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.PostalCode, new { @class = "form-control", required = true })
                        @Html.ValidationMessageFor(x => x.PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-sm pull-left" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-sm pull-left" onclick="createOrUpdate()">Save</button>
    </div>
</form>


